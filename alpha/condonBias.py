# coding:utf-8

import numpy as np


def getCodonFreq(seq):
    """
    get the frequency of N nucleotide combinations (N=1, 2, 3)  of the Sequence.

    :param seq: the sequence of transcript
    :return: a list of frequency of N nucleotide combinations.
    """

    if len(seq) == 0:
        ret = np.zeros(shape=(4+16+64))
        return ret

    four = ['A', 'C', 'G', 'T']
    four_dict = {'A':0, 'C':1, 'G':2, 'T':3}
    uni = np.zeros(shape=4)

    for x in seq:
        if x != 'N':
            uni[four_dict[x]] += 1

    uni /= sum(uni)

    duas = np.ndarray.flatten\
        (np.asarray([[x + y for x in four] for y in four]))

    dua_dict = {duas[i]:i for i in range(len(duas))}

    # 假设只需要计算3段到5段
    dua = np.zeros(shape=16)
    for s in [seq[i:i+2] for i in range(len(seq) - 1)]:
        if 'N' not in s:
            dua[dua_dict[s]] += 1

    dua /= sum(dua)

    # tri
    tris = np.ndarray.flatten(np.asarray(([[[x + y + z for x in four]
                                          for y in four]
                                              for z in four])))

    tri_dict = {tris[i]: i for i in range(len(tris))}
    tri = np.zeros(shape=64)
    for s in [seq[i:i+3] for i in range(len(seq) - 2)]:
        if 'N' not in s:
            tri[tri_dict[s]] += 1

    tri /= sum(tri)

    ret = list(uni)
    ret.extend(list(dua))
    ret.extend(list(tri))
    return ret

if __name__ == '__main__':
    egRNA = "CCCCTGAAAGCTGGCGAGGCGCGCGCGCTCCCGCGGCACGCCGCGCCTCCGCCCTCCGCCCGCCAACCCGCTGGTCCAGTCCCTCTTCGCGCCCGCTTGGCTCCGCCCCCTTCCCAATTCGCTCCTCCCCCAACAGACTGGCGGCGCGCGGAAAACGCGTCACGTGACGACTGGCCCCGCCTCTTCCTCTCGGTCCCATATTGAACTCGAGTTGGAAGAGGCGAGTCCGGTCTCAAAATGGAGGTAAAACCGCCGCCCGGTCGCCCCCAGCCCGACTCCGGCCGTCGCCGTCGCCGCCGGGGGGAGGAGGGCCATGATCCAAAGGAACCAGAGCAGTTGAGAAAACTGTTTATTGGTGGTCTGAGCTTTGAAACTACAGATGATAGTTTACGAGAACATTTTGAGAAATGGGGCACACTCACAGATTGTGTGGTAATGAGAGACCCCCAAACAAAACGTTCCAGGGGCTTTGGTTTTGTGACTTATTCTTGTGTTGAAGAGGTGGATGCAGCAATGTGTGCTCGACCACACAAGGTTGATGGGCGTGTAGTGGAACCAAAGAGAGCTGTTTCTAGAGAGGATTCTGTAAAGCCTGGTGCCCATCTAACAGTGAAGAAAATTTTTGTTGGTGGTATTAAAGAAGATACAGAAGAATATAATTTGAGAGACTACTTTGAAAAGTATGGCAAGATTGAAACCATAGAAGTTATGGAAGACAGGCAGAGTGGAAAAAAGAGAGGATTTGCTTTTGTAACTTTTGATGATCATGATACAGTTGATAAAATTGTTGTTCAGAAATACCACACTATTAATGGGCATAATTGTGAAGTGAAAAAGGCCCTTTCTAAACAAGAGATGCAGTCTGCTGGATCACAGAGAGGTCGTGGAGGTGGATCTGGCAATTTTATGGGTCGCGGAGGGAACTTTGGAGGTGGTGGAGGTAATTTTGGCCGTGGTGGAAACTTTGGTGGAAGAGGAGGCTATGGTGGTGGAGGTGGTGGCAGCAGAGGTAGTTATGGAGGAGGTGATGGTGGATATAATGGATTTGGAGGTGATGGTGGCAACTATGGCGGTGGTCCTGGTTATAGTAGTAGAGGGGGCTATGGTGGTGGTGGACCAGGATATGGAAACCAAGGTGGTGGATATGGTGGAGGTGGAGGATATGATGGTTACAATGAAGGAGGAAATTTTGGCGGTGGTAACTATGGTGGTGGTGGGAACTATAATGATTTTGGAAATTATAGTGGACAACAGCAATCAAATTATGGACCCATGAAAGGGGGCAGTTTTGGTGGAAGAAGCTCGGGCAGTCCCTATGGTGGTGGTTATGGATCTGGTGGTGGAAGTGGTGGATATGGTAGCAGAAGGTTCTAAAAACAGCAGAAAAGGGCTACAGTTCTTAGCAGGAGAGAGAGCGAGGAGTTGTCAGGAAAGCTGCAGGTTACTTTGAGACAGTCGTCCCAAATGCATTAGAGGAACTGTAAAAATCTGCCACAGAAGGAACGATGATCCATAGTCAGAAAAGTTACTGCAGCTTAAACAGGAAACCCTTCTTGTTCAGGACTGTCATAGCCACAGTTTGCAAAAAGTGCAGCTATTGATTAATGCAATGTAGTGTCAATTAGATGTACATTCCTGAGGTCTTTTATCTGTTGTAGCTTTGTCTTTTTCTTTTTCTTTTCATTACATCAGGTATATTGCCCTGTAAATTGTGGTAGTGGTACCAGGAATAAAAAATTAAGGAATTTTTAACTTTTCAATATTTGTGTAGTTCAGTTTTTCTACATTTTAGTACAGAAACTTTAACAAAATGCAGTTTCGAAGGTGTTTCCTTGTGAGTTAACAAGTAAAGAAGATCATTGTTAATTACTATTTTGTATGAATTTTGCTAAAGTTAACTGTAAAGAAACACCTGCTGACTTGCAGTTTAAGGGGAATCTATTCTCCCCATTTCCAAACCATGATATGAATGGGCGCTGACATGTGGAGAGAATAGATAATTTGTGTGTTTGCAATGTGTGTTTTAGATAAATAGGATTGGGTATTTAAATTAGCATTTGTGAATTT"
    print(getCodonFreq(egRNA))
    print(getCodonFreq(""))
